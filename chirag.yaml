---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Githubowner:
    Type: String
    Description: GitHub user or organization name
  Githubrepo:
    Type: String
    Description: GitHub repository name
  Githubbranch:
    Type: String
    Default: main
    Description: GitHub branch name
  Githuboauthtoken:
    Type: String
    NoEcho: true
    Description: GitHub OAuth token for CodePipeline access

Resources:

  # VPC and Networking
  ChiragFinalVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: ChiragFinalVpc

  ChiragFinalSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ChiragFinalVpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ChiragFinalSubnet1

  ChiragFinalSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ChiragFinalVpc
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ChiragFinalSubnet2

  ChiragFinalIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ChiragFinalIgw

  ChiragFinalAttachIgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ChiragFinalVpc
      InternetGatewayId: !Ref ChiragFinalIgw

  ChiragFinalRt:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ChiragFinalVpc

  ChiragFinalRoute:
    Type: AWS::EC2::Route
    DependsOn: ChiragFinalAttachIgw
    Properties:
      RouteTableId: !Ref ChiragFinalRt
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ChiragFinalIgw

  ChiragFinalRtAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ChiragFinalSubnet1
      RouteTableId: !Ref ChiragFinalRt

  ChiragFinalRtAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ChiragFinalSubnet2
      RouteTableId: !Ref ChiragFinalRt

  # Security Groups
  ChiragFinalAlbSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic to ALB
      VpcId: !Ref ChiragFinalVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ChiragFinalEcsSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from ALB to ECS tasks
      VpcId: !Ref ChiragFinalVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !Ref ChiragFinalAlbSg

  # ECS Cluster
  ChiragFinalEcsCluster:
    Type: AWS::ECS::Cluster

  # ECS Task Definition (Docker image placeholder)
  ChiragFinalTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      ContainerDefinitions:
        - Name: wildrydes-app
          Image: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/wildrydes:latest"
          PortMappings:
            - ContainerPort: 5000

  # Application Load Balancer
  ChiragFinalAlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ChiragFinalAlb
      Scheme: internet-facing
      Subnets:
        - !Ref ChiragFinalSubnet1
        - !Ref ChiragFinalSubnet2
      SecurityGroups:
        - !Ref ChiragFinalAlbSg

  ChiragFinalTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref ChiragFinalVpc
      Protocol: HTTP
      Port: 5000
      TargetType: ip

  ChiragFinalListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ChiragFinalAlb
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ChiragFinalTargetGroup

  # ECS Service
  ChiragFinalEcsService:
    Type: AWS::ECS::Service
    DependsOn: ChiragFinalListener
    Properties:
      Cluster: !Ref ChiragFinalEcsCluster
      DesiredCount: 2
      LaunchType: FARGATE
      TaskDefinition: !Ref ChiragFinalTaskDef
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref ChiragFinalSubnet1
            - !Ref ChiragFinalSubnet2
          SecurityGroups:
            - !Ref ChiragFinalEcsSg
      LoadBalancers:
        - TargetGroupArn: !Ref ChiragFinalTargetGroup
          ContainerName: wildrydes-app
          ContainerPort: 5000

  # CodePipeline (CI/CD)
  ChiragFinalArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: chirag-final-artifacts

  ChiragFinalPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess

  ChiragFinalPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChiragFinalPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ChiragFinalArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref Githubowner
                Repo: !Ref Githubrepo
                Branch: !Ref Githubbranch
                OAuthToken: !Ref Githuboauthtoken
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: "ChiragCodeBuildProject"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: 1
              Configuration:
                ClusterName: !Ref ChiragFinalEcsCluster
                ServiceName: !Ref ChiragFinalEcsService
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  # CloudWatch Alarms 
  ChiragFinalPipeline-alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm if CodePipeline fails
      MetricName: FailedExecutions
      Namespace: AWS/CodePipeline
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: PipelineName
          Value: !Ref ChiragFinalPipeline


  ChiragEcsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

Outputs:
  LoadBalancerDNS:
    Description: DNS name of the application load balancer
    Value: !GetAtt ChiragFinalAlb.DNSName
